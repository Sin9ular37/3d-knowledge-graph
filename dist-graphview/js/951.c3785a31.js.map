{"version":3,"file":"js/951.c3785a31.js","mappings":"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","sources":["webpack://3d-graphic-view/./node_modules/three/examples/jsm/controls/OrbitControls.js"],"sourcesContent":["import {\n\tControls,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3,\n\tPlane,\n\tRay,\n\tMathUtils\n} from 'three';\n\n/**\n * Fires when the camera has been transformed by the controls.\n *\n * @event OrbitControls#change\n * @type {Object}\n */\nconst _changeEvent = { type: 'change' };\n\n/**\n * Fires when an interaction was initiated.\n *\n * @event OrbitControls#start\n * @type {Object}\n */\nconst _startEvent = { type: 'start' };\n\n/**\n * Fires when an interaction has finished.\n *\n * @event OrbitControls#end\n * @type {Object}\n */\nconst _endEvent = { type: 'end' };\n\nconst _ray = new Ray();\nconst _plane = new Plane();\nconst _TILT_LIMIT = Math.cos( 70 * MathUtils.DEG2RAD );\n\nconst _v = new Vector3();\nconst _twoPI = 2 * Math.PI;\n\nconst _STATE = {\n\tNONE: - 1,\n\tROTATE: 0,\n\tDOLLY: 1,\n\tPAN: 2,\n\tTOUCH_ROTATE: 3,\n\tTOUCH_PAN: 4,\n\tTOUCH_DOLLY_PAN: 5,\n\tTOUCH_DOLLY_ROTATE: 6\n};\nconst _EPS = 0.000001;\n\n\n/**\n * Orbit controls allow the camera to orbit around a target.\n *\n * OrbitControls performs orbiting, dollying (zooming), and panning. Unlike {@link TrackballControls},\n * it maintains the \"up\" direction `object.up` (+Y by default).\n *\n * - Orbit: Left mouse / touch: one-finger move.\n * - Zoom: Middle mouse, or mousewheel / touch: two-finger spread or squish.\n * - Pan: Right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move.\n *\n * ```js\n * const controls = new OrbitControls( camera, renderer.domElement );\n *\n * // controls.update() must be called after any manual changes to the camera's transform\n * camera.position.set( 0, 20, 100 );\n * controls.update();\n *\n * function animate() {\n *\n * \t// required if controls.enableDamping or controls.autoRotate are set to true\n * \tcontrols.update();\n *\n * \trenderer.render( scene, camera );\n *\n * }\n * ```\n *\n * @augments Controls\n * @three_import import { OrbitControls } from 'three/addons/controls/OrbitControls.js';\n */\nclass OrbitControls extends Controls {\n\n\t/**\n\t * Constructs a new controls instance.\n\t *\n\t * @param {Object3D} object - The object that is managed by the controls.\n\t * @param {?HTMLDOMElement} domElement - The HTML element used for event listeners.\n\t */\n\tconstructor( object, domElement = null ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.state = _STATE.NONE;\n\n\t\t/**\n\t\t * The focus point of the controls, the `object` orbits around this.\n\t\t * It can be updated manually at any point to change the focus of the controls.\n\t\t *\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.target = new Vector3();\n\n\t\t/**\n\t\t * The focus point of the `minTargetRadius` and `maxTargetRadius` limits.\n\t\t * It can be updated manually at any point to change the center of interest\n\t\t * for the `target`.\n\t\t *\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.cursor = new Vector3();\n\n\t\t/**\n\t\t * How far you can dolly in (perspective camera only).\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.minDistance = 0;\n\n\t\t/**\n\t\t * How far you can dolly out (perspective camera only).\n\t\t *\n\t\t * @type {number}\n\t\t * @default Infinity\n\t\t */\n\t\tthis.maxDistance = Infinity;\n\n\t\t/**\n\t\t * How far you can zoom in (orthographic camera only).\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.minZoom = 0;\n\n\t\t/**\n\t\t * How far you can zoom out (orthographic camera only).\n\t\t *\n\t\t * @type {number}\n\t\t * @default Infinity\n\t\t */\n\t\tthis.maxZoom = Infinity;\n\n\t\t/**\n\t\t * How close you can get the target to the 3D `cursor`.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.minTargetRadius = 0;\n\n\t\t/**\n\t\t * How far you can move the target from the 3D `cursor`.\n\t\t *\n\t\t * @type {number}\n\t\t * @default Infinity\n\t\t */\n\t\tthis.maxTargetRadius = Infinity;\n\n\t\t/**\n\t\t * How far you can orbit vertically, lower limit. Range is `[0, Math.PI]` radians.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.minPolarAngle = 0;\n\n\t\t/**\n\t\t * How far you can orbit vertically, upper limit. Range is `[0, Math.PI]` radians.\n\t\t *\n\t\t * @type {number}\n\t\t * @default Math.PI\n\t\t */\n\t\tthis.maxPolarAngle = Math.PI;\n\n\t\t/**\n\t\t * How far you can orbit horizontally, lower limit. If set, the interval `[ min, max ]`\n\t\t * must be a sub-interval of `[ - 2 PI, 2 PI ]`, with `( max - min < 2 PI )`.\n\t\t *\n\t\t * @type {number}\n\t\t * @default -Infinity\n\t\t */\n\t\tthis.minAzimuthAngle = - Infinity;\n\n\t\t/**\n\t\t * How far you can orbit horizontally, upper limit. If set, the interval `[ min, max ]`\n\t\t * must be a sub-interval of `[ - 2 PI, 2 PI ]`, with `( max - min < 2 PI )`.\n\t\t *\n\t\t * @type {number}\n\t\t * @default -Infinity\n\t\t */\n\t\tthis.maxAzimuthAngle = Infinity;\n\n\t\t/**\n\t\t * Set to `true` to enable damping (inertia), which can be used to give a sense of weight\n\t\t * to the controls. Note that if this is enabled, you must call `update()` in your animation\n\t\t * loop.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.enableDamping = false;\n\n\t\t/**\n\t\t * The damping inertia used if `enableDamping` is set to `true`.\n\t\t *\n\t\t * Note that for this to work, you must call `update()` in your animation loop.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0.05\n\t\t */\n\t\tthis.dampingFactor = 0.05;\n\n\t\t/**\n\t\t * Enable or disable zooming (dollying) of the camera.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.enableZoom = true;\n\n\t\t/**\n\t\t * Speed of zooming / dollying.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t/**\n\t\t * Enable or disable horizontal and vertical rotation of the camera.\n\t\t *\n\t\t * Note that it is possible to disable a single axis by setting the min and max of the\n\t\t * `minPolarAngle` or `minAzimuthAngle` to the same value, which will cause the vertical\n\t\t * or horizontal rotation to be fixed at that value.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.enableRotate = true;\n\n\t\t/**\n\t\t * Speed of rotation.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t/**\n\t\t * How fast to rotate the camera when the keyboard is used.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.keyRotateSpeed = 1.0;\n\n\t\t/**\n\t\t * Enable or disable camera panning.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.enablePan = true;\n\n\t\t/**\n\t\t * Speed of panning.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.panSpeed = 1.0;\n\n\t\t/**\n\t\t * Defines how the camera's position is translated when panning. If `true`, the camera pans\n\t\t * in screen space. Otherwise, the camera pans in the plane orthogonal to the camera's up\n\t\t * direction.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.screenSpacePanning = true;\n\n\t\t/**\n\t\t * How fast to pan the camera when the keyboard is used in\n\t\t * pixels per keypress.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 7\n\t\t */\n\t\tthis.keyPanSpeed = 7.0;\n\n\t\t/**\n\t\t * Setting this property to `true` allows to zoom to the cursor's position.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.zoomToCursor = false;\n\n\t\t/**\n\t\t * Set to true to automatically rotate around the target\n\t\t *\n\t\t * Note that if this is enabled, you must call `update()` in your animation loop.\n\t\t * If you want the auto-rotate speed to be independent of the frame rate (the refresh\n\t\t * rate of the display), you must pass the time `deltaTime`, in seconds, to `update()`.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.autoRotate = false;\n\n\t\t/**\n\t\t * How fast to rotate around the target if `autoRotate` is `true`. The default  equates to 30 seconds\n\t\t * per orbit at 60fps.\n\t\t *\n\t\t * Note that if `autoRotate` is enabled, you must call `update()` in your animation loop.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 2\n\t\t */\n\t\tthis.autoRotateSpeed = 2.0;\n\n\t\t/**\n\t\t * This object contains references to the keycodes for controlling camera panning.\n\t\t *\n\t\t * ```js\n\t\t * controls.keys = {\n\t\t * \tLEFT: 'ArrowLeft', //left arrow\n\t\t * \tUP: 'ArrowUp', // up arrow\n\t\t * \tRIGHT: 'ArrowRight', // right arrow\n\t\t * \tBOTTOM: 'ArrowDown' // down arrow\n\t\t * }\n\t\t * ```\n\t\t * @type {Object}\n\t\t */\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t/**\n\t\t * This object contains references to the mouse actions used by the controls.\n\t\t *\n\t\t * ```js\n\t\t * controls.mouseButtons = {\n\t\t * \tLEFT: THREE.MOUSE.ROTATE,\n\t\t * \tMIDDLE: THREE.MOUSE.DOLLY,\n\t\t * \tRIGHT: THREE.MOUSE.PAN\n\t\t * }\n\t\t * ```\n\t\t * @type {Object}\n\t\t */\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t/**\n\t\t * This object contains references to the touch actions used by the controls.\n\t\t *\n\t\t * ```js\n\t\t * controls.mouseButtons = {\n\t\t * \tONE: THREE.TOUCH.ROTATE,\n\t\t * \tTWO: THREE.TOUCH.DOLLY_PAN\n\t\t * }\n\t\t * ```\n\t\t * @type {Object}\n\t\t */\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t/**\n\t\t * Used internally by `saveState()` and `reset()`.\n\t\t *\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.target0 = this.target.clone();\n\n\t\t/**\n\t\t * Used internally by `saveState()` and `reset()`.\n\t\t *\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.position0 = this.object.position.clone();\n\n\t\t/**\n\t\t * Used internally by `saveState()` and `reset()`.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t// internals\n\n\t\tthis._lastPosition = new Vector3();\n\t\tthis._lastQuaternion = new Quaternion();\n\t\tthis._lastTargetPosition = new Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tthis._quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\tthis._quatInverse = this._quat.clone().invert();\n\n\t\t// current position in spherical coordinates\n\t\tthis._spherical = new Spherical();\n\t\tthis._sphericalDelta = new Spherical();\n\n\t\tthis._scale = 1;\n\t\tthis._panOffset = new Vector3();\n\n\t\tthis._rotateStart = new Vector2();\n\t\tthis._rotateEnd = new Vector2();\n\t\tthis._rotateDelta = new Vector2();\n\n\t\tthis._panStart = new Vector2();\n\t\tthis._panEnd = new Vector2();\n\t\tthis._panDelta = new Vector2();\n\n\t\tthis._dollyStart = new Vector2();\n\t\tthis._dollyEnd = new Vector2();\n\t\tthis._dollyDelta = new Vector2();\n\n\t\tthis._dollyDirection = new Vector3();\n\t\tthis._mouse = new Vector2();\n\t\tthis._performCursorZoom = false;\n\n\t\tthis._pointers = [];\n\t\tthis._pointerPositions = {};\n\n\t\tthis._controlActive = false;\n\n\t\t// event listeners\n\n\t\tthis._onPointerMove = onPointerMove.bind( this );\n\t\tthis._onPointerDown = onPointerDown.bind( this );\n\t\tthis._onPointerUp = onPointerUp.bind( this );\n\t\tthis._onContextMenu = onContextMenu.bind( this );\n\t\tthis._onMouseWheel = onMouseWheel.bind( this );\n\t\tthis._onKeyDown = onKeyDown.bind( this );\n\n\t\tthis._onTouchStart = onTouchStart.bind( this );\n\t\tthis._onTouchMove = onTouchMove.bind( this );\n\n\t\tthis._onMouseDown = onMouseDown.bind( this );\n\t\tthis._onMouseMove = onMouseMove.bind( this );\n\n\t\tthis._interceptControlDown = interceptControlDown.bind( this );\n\t\tthis._interceptControlUp = interceptControlUp.bind( this );\n\n\t\t//\n\n\t\tif ( this.domElement !== null ) {\n\n\t\t\tthis.connect( this.domElement );\n\n\t\t}\n\n\t\tthis.update();\n\n\t}\n\n\tconnect( element ) {\n\n\t\tsuper.connect( element );\n\n\t\tthis.domElement.addEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.addEventListener( 'pointercancel', this._onPointerUp );\n\n\t\tthis.domElement.addEventListener( 'contextmenu', this._onContextMenu );\n\t\tthis.domElement.addEventListener( 'wheel', this._onMouseWheel, { passive: false } );\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\t\tdocument.addEventListener( 'keydown', this._interceptControlDown, { passive: true, capture: true } );\n\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t}\n\n\tdisconnect() {\n\n\t\tthis.domElement.removeEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\t\tthis.domElement.removeEventListener( 'pointercancel', this._onPointerUp );\n\n\t\tthis.domElement.removeEventListener( 'wheel', this._onMouseWheel );\n\t\tthis.domElement.removeEventListener( 'contextmenu', this._onContextMenu );\n\n\t\tthis.stopListenToKeyEvents();\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\t\tdocument.removeEventListener( 'keydown', this._interceptControlDown, { capture: true } );\n\n\t\tthis.domElement.style.touchAction = 'auto';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.disconnect();\n\n\t}\n\n\t/**\n\t * Get the current vertical rotation, in radians.\n\t *\n\t * @return {number} The current vertical rotation, in radians.\n\t */\n\tgetPolarAngle() {\n\n\t\treturn this._spherical.phi;\n\n\t}\n\n\t/**\n\t * Get the current horizontal rotation, in radians.\n\t *\n\t * @return {number} The current horizontal rotation, in radians.\n\t */\n\tgetAzimuthalAngle() {\n\n\t\treturn this._spherical.theta;\n\n\t}\n\n\t/**\n\t * Returns the distance from the camera to the target.\n\t *\n\t * @return {number} The distance from the camera to the target.\n\t */\n\tgetDistance() {\n\n\t\treturn this.object.position.distanceTo( this.target );\n\n\t}\n\n\t/**\n\t * Adds key event listeners to the given DOM element.\n\t * `window` is a recommended argument for using this method.\n\t *\n\t * @param {HTMLDOMElement} domElement - The DOM element\n\t */\n\tlistenToKeyEvents( domElement ) {\n\n\t\tdomElement.addEventListener( 'keydown', this._onKeyDown );\n\t\tthis._domElementKeyEvents = domElement;\n\n\t}\n\n\t/**\n\t * Removes the key event listener previously defined with `listenToKeyEvents()`.\n\t */\n\tstopListenToKeyEvents() {\n\n\t\tif ( this._domElementKeyEvents !== null ) {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', this._onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Save the current state of the controls. This can later be recovered with `reset()`.\n\t */\n\tsaveState() {\n\n\t\tthis.target0.copy( this.target );\n\t\tthis.position0.copy( this.object.position );\n\t\tthis.zoom0 = this.object.zoom;\n\n\t}\n\n\t/**\n\t * Reset the controls to their state from either the last time the `saveState()`\n\t * was called, or the initial state.\n\t */\n\treset() {\n\n\t\tthis.target.copy( this.target0 );\n\t\tthis.object.position.copy( this.position0 );\n\t\tthis.object.zoom = this.zoom0;\n\n\t\tthis.object.updateProjectionMatrix();\n\t\tthis.dispatchEvent( _changeEvent );\n\n\t\tthis.update();\n\n\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tupdate( deltaTime = null ) {\n\n\t\tconst position = this.object.position;\n\n\t\t_v.copy( position ).sub( this.target );\n\n\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t_v.applyQuaternion( this._quat );\n\n\t\t// angle from z-axis around y-axis\n\t\tthis._spherical.setFromVector3( _v );\n\n\t\tif ( this.autoRotate && this.state === _STATE.NONE ) {\n\n\t\t\tthis._rotateLeft( this._getAutoRotationAngle( deltaTime ) );\n\n\t\t}\n\n\t\tif ( this.enableDamping ) {\n\n\t\t\tthis._spherical.theta += this._sphericalDelta.theta * this.dampingFactor;\n\t\t\tthis._spherical.phi += this._sphericalDelta.phi * this.dampingFactor;\n\n\t\t} else {\n\n\t\t\tthis._spherical.theta += this._sphericalDelta.theta;\n\t\t\tthis._spherical.phi += this._sphericalDelta.phi;\n\n\t\t}\n\n\t\t// restrict theta to be between desired limits\n\n\t\tlet min = this.minAzimuthAngle;\n\t\tlet max = this.maxAzimuthAngle;\n\n\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\tif ( min < - Math.PI ) min += _twoPI; else if ( min > Math.PI ) min -= _twoPI;\n\n\t\t\tif ( max < - Math.PI ) max += _twoPI; else if ( max > Math.PI ) max -= _twoPI;\n\n\t\t\tif ( min <= max ) {\n\n\t\t\t\tthis._spherical.theta = Math.max( min, Math.min( max, this._spherical.theta ) );\n\n\t\t\t} else {\n\n\t\t\t\tthis._spherical.theta = ( this._spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\tMath.max( min, this._spherical.theta ) :\n\t\t\t\t\tMath.min( max, this._spherical.theta );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restrict phi to be between desired limits\n\t\tthis._spherical.phi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, this._spherical.phi ) );\n\n\t\tthis._spherical.makeSafe();\n\n\n\t\t// move target to panned location\n\n\t\tif ( this.enableDamping === true ) {\n\n\t\t\tthis.target.addScaledVector( this._panOffset, this.dampingFactor );\n\n\t\t} else {\n\n\t\t\tthis.target.add( this._panOffset );\n\n\t\t}\n\n\t\t// Limit the target distance from the cursor to create a sphere around the center of interest\n\t\tthis.target.sub( this.cursor );\n\t\tthis.target.clampLength( this.minTargetRadius, this.maxTargetRadius );\n\t\tthis.target.add( this.cursor );\n\n\t\tlet zoomChanged = false;\n\t\t// adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n\t\t// we adjust zoom later in these cases\n\t\tif ( this.zoomToCursor && this._performCursorZoom || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._spherical.radius = this._clampDistance( this._spherical.radius );\n\n\t\t} else {\n\n\t\t\tconst prevRadius = this._spherical.radius;\n\t\t\tthis._spherical.radius = this._clampDistance( this._spherical.radius * this._scale );\n\t\t\tzoomChanged = prevRadius != this._spherical.radius;\n\n\t\t}\n\n\t\t_v.setFromSpherical( this._spherical );\n\n\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t_v.applyQuaternion( this._quatInverse );\n\n\t\tposition.copy( this.target ).add( _v );\n\n\t\tthis.object.lookAt( this.target );\n\n\t\tif ( this.enableDamping === true ) {\n\n\t\t\tthis._sphericalDelta.theta *= ( 1 - this.dampingFactor );\n\t\t\tthis._sphericalDelta.phi *= ( 1 - this.dampingFactor );\n\n\t\t\tthis._panOffset.multiplyScalar( 1 - this.dampingFactor );\n\n\t\t} else {\n\n\t\t\tthis._sphericalDelta.set( 0, 0, 0 );\n\n\t\t\tthis._panOffset.set( 0, 0, 0 );\n\n\t\t}\n\n\t\t// adjust camera position\n\t\tif ( this.zoomToCursor && this._performCursorZoom ) {\n\n\t\t\tlet newRadius = null;\n\t\t\tif ( this.object.isPerspectiveCamera ) {\n\n\t\t\t\t// move the camera down the pointer ray\n\t\t\t\t// this method avoids floating point error\n\t\t\t\tconst prevRadius = _v.length();\n\t\t\t\tnewRadius = this._clampDistance( prevRadius * this._scale );\n\n\t\t\t\tconst radiusDelta = prevRadius - newRadius;\n\t\t\t\tthis.object.position.addScaledVector( this._dollyDirection, radiusDelta );\n\t\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\t\tzoomChanged = !! radiusDelta;\n\n\t\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\t\t// adjust the ortho camera position based on zoom changes\n\t\t\t\tconst mouseBefore = new Vector3( this._mouse.x, this._mouse.y, 0 );\n\t\t\t\tmouseBefore.unproject( this.object );\n\n\t\t\t\tconst prevZoom = this.object.zoom;\n\t\t\t\tthis.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / this._scale ) );\n\t\t\t\tthis.object.updateProjectionMatrix();\n\n\t\t\t\tzoomChanged = prevZoom !== this.object.zoom;\n\n\t\t\t\tconst mouseAfter = new Vector3( this._mouse.x, this._mouse.y, 0 );\n\t\t\t\tmouseAfter.unproject( this.object );\n\n\t\t\t\tthis.object.position.sub( mouseAfter ).add( mouseBefore );\n\t\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\t\tnewRadius = _v.length();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.' );\n\t\t\t\tthis.zoomToCursor = false;\n\n\t\t\t}\n\n\t\t\t// handle the placement of the target\n\t\t\tif ( newRadius !== null ) {\n\n\t\t\t\tif ( this.screenSpacePanning ) {\n\n\t\t\t\t\t// position the orbit target in front of the new camera position\n\t\t\t\t\tthis.target.set( 0, 0, - 1 )\n\t\t\t\t\t\t.transformDirection( this.object.matrix )\n\t\t\t\t\t\t.multiplyScalar( newRadius )\n\t\t\t\t\t\t.add( this.object.position );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// get the ray and translation plane to compute target\n\t\t\t\t\t_ray.origin.copy( this.object.position );\n\t\t\t\t\t_ray.direction.set( 0, 0, - 1 ).transformDirection( this.object.matrix );\n\n\t\t\t\t\t// if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n\t\t\t\t\t// extremely large values\n\t\t\t\t\tif ( Math.abs( this.object.up.dot( _ray.direction ) ) < _TILT_LIMIT ) {\n\n\t\t\t\t\t\tthis.object.lookAt( this.target );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( this.object.up, this.target );\n\t\t\t\t\t\t_ray.intersectPlane( _plane, this.target );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\tconst prevZoom = this.object.zoom;\n\t\t\tthis.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / this._scale ) );\n\n\t\t\tif ( prevZoom !== this.object.zoom ) {\n\n\t\t\t\tthis.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._scale = 1;\n\t\tthis._performCursorZoom = false;\n\n\t\t// update condition is:\n\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\tif ( zoomChanged ||\n\t\t\tthis._lastPosition.distanceToSquared( this.object.position ) > _EPS ||\n\t\t\t8 * ( 1 - this._lastQuaternion.dot( this.object.quaternion ) ) > _EPS ||\n\t\t\tthis._lastTargetPosition.distanceToSquared( this.target ) > _EPS ) {\n\n\t\t\tthis.dispatchEvent( _changeEvent );\n\n\t\t\tthis._lastPosition.copy( this.object.position );\n\t\t\tthis._lastQuaternion.copy( this.object.quaternion );\n\t\t\tthis._lastTargetPosition.copy( this.target );\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t_getAutoRotationAngle( deltaTime ) {\n\n\t\tif ( deltaTime !== null ) {\n\n\t\t\treturn ( _twoPI / 60 * this.autoRotateSpeed ) * deltaTime;\n\n\t\t} else {\n\n\t\t\treturn _twoPI / 60 / 60 * this.autoRotateSpeed;\n\n\t\t}\n\n\t}\n\n\t_getZoomScale( delta ) {\n\n\t\tconst normalizedDelta = Math.abs( delta * 0.01 );\n\t\treturn Math.pow( 0.95, this.zoomSpeed * normalizedDelta );\n\n\t}\n\n\t_rotateLeft( angle ) {\n\n\t\tthis._sphericalDelta.theta -= angle;\n\n\t}\n\n\t_rotateUp( angle ) {\n\n\t\tthis._sphericalDelta.phi -= angle;\n\n\t}\n\n\t_panLeft( distance, objectMatrix ) {\n\n\t\t_v.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t_v.multiplyScalar( - distance );\n\n\t\tthis._panOffset.add( _v );\n\n\t}\n\n\t_panUp( distance, objectMatrix ) {\n\n\t\tif ( this.screenSpacePanning === true ) {\n\n\t\t\t_v.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t} else {\n\n\t\t\t_v.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t_v.crossVectors( this.object.up, _v );\n\n\t\t}\n\n\t\t_v.multiplyScalar( distance );\n\n\t\tthis._panOffset.add( _v );\n\n\t}\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\t_pan( deltaX, deltaY ) {\n\n\t\tconst element = this.domElement;\n\n\t\tif ( this.object.isPerspectiveCamera ) {\n\n\t\t\t// perspective\n\t\t\tconst position = this.object.position;\n\t\t\t_v.copy( position ).sub( this.target );\n\t\t\tlet targetDistance = _v.length();\n\n\t\t\t// half of the fov is center to top of screen\n\t\t\ttargetDistance *= Math.tan( ( this.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\tthis._panLeft( 2 * deltaX * targetDistance / element.clientHeight, this.object.matrix );\n\t\t\tthis._panUp( 2 * deltaY * targetDistance / element.clientHeight, this.object.matrix );\n\n\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\t// orthographic\n\t\t\tthis._panLeft( deltaX * ( this.object.right - this.object.left ) / this.object.zoom / element.clientWidth, this.object.matrix );\n\t\t\tthis._panUp( deltaY * ( this.object.top - this.object.bottom ) / this.object.zoom / element.clientHeight, this.object.matrix );\n\n\t\t} else {\n\n\t\t\t// camera neither orthographic nor perspective\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\tthis.enablePan = false;\n\n\t\t}\n\n\t}\n\n\t_dollyOut( dollyScale ) {\n\n\t\tif ( this.object.isPerspectiveCamera || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._scale /= dollyScale;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tthis.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t_dollyIn( dollyScale ) {\n\n\t\tif ( this.object.isPerspectiveCamera || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._scale *= dollyScale;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tthis.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t_updateZoomParameters( x, y ) {\n\n\t\tif ( ! this.zoomToCursor ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._performCursorZoom = true;\n\n\t\tconst rect = this.domElement.getBoundingClientRect();\n\t\tconst dx = x - rect.left;\n\t\tconst dy = y - rect.top;\n\t\tconst w = rect.width;\n\t\tconst h = rect.height;\n\n\t\tthis._mouse.x = ( dx / w ) * 2 - 1;\n\t\tthis._mouse.y = - ( dy / h ) * 2 + 1;\n\n\t\tthis._dollyDirection.set( this._mouse.x, this._mouse.y, 1 ).unproject( this.object ).sub( this.object.position ).normalize();\n\n\t}\n\n\t_clampDistance( dist ) {\n\n\t\treturn Math.max( this.minDistance, Math.min( this.maxDistance, dist ) );\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\t_handleMouseDownRotate( event ) {\n\n\t\tthis._rotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseDownDolly( event ) {\n\n\t\tthis._updateZoomParameters( event.clientX, event.clientX );\n\t\tthis._dollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseDownPan( event ) {\n\n\t\tthis._panStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseMoveRotate( event ) {\n\n\t\tthis._rotateEnd.set( event.clientX, event.clientY );\n\n\t\tthis._rotateDelta.subVectors( this._rotateEnd, this._rotateStart ).multiplyScalar( this.rotateSpeed );\n\n\t\tconst element = this.domElement;\n\n\t\tthis._rotateLeft( _twoPI * this._rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\tthis._rotateUp( _twoPI * this._rotateDelta.y / element.clientHeight );\n\n\t\tthis._rotateStart.copy( this._rotateEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseMoveDolly( event ) {\n\n\t\tthis._dollyEnd.set( event.clientX, event.clientY );\n\n\t\tthis._dollyDelta.subVectors( this._dollyEnd, this._dollyStart );\n\n\t\tif ( this._dollyDelta.y > 0 ) {\n\n\t\t\tthis._dollyOut( this._getZoomScale( this._dollyDelta.y ) );\n\n\t\t} else if ( this._dollyDelta.y < 0 ) {\n\n\t\t\tthis._dollyIn( this._getZoomScale( this._dollyDelta.y ) );\n\n\t\t}\n\n\t\tthis._dollyStart.copy( this._dollyEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseMovePan( event ) {\n\n\t\tthis._panEnd.set( event.clientX, event.clientY );\n\n\t\tthis._panDelta.subVectors( this._panEnd, this._panStart ).multiplyScalar( this.panSpeed );\n\n\t\tthis._pan( this._panDelta.x, this._panDelta.y );\n\n\t\tthis._panStart.copy( this._panEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseWheel( event ) {\n\n\t\tthis._updateZoomParameters( event.clientX, event.clientY );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tthis._dollyIn( this._getZoomScale( event.deltaY ) );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tthis._dollyOut( this._getZoomScale( event.deltaY ) );\n\n\t\t}\n\n\t\tthis.update();\n\n\t}\n\n\t_handleKeyDown( event ) {\n\n\t\tlet needsUpdate = false;\n\n\t\tswitch ( event.code ) {\n\n\t\t\tcase this.keys.UP:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateUp( _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( 0, this.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.BOTTOM:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateUp( - _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( 0, - this.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.LEFT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateLeft( _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( this.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.RIGHT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateLeft( - _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( - this.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.update();\n\n\t\t}\n\n\n\t}\n\n\t_handleTouchStartRotate( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._rotateStart.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._rotateStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\t_handleTouchStartPan( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._panStart.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._panStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\t_handleTouchStartDolly( event ) {\n\n\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\tconst dx = event.pageX - position.x;\n\t\tconst dy = event.pageY - position.y;\n\n\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tthis._dollyStart.set( 0, distance );\n\n\t}\n\n\t_handleTouchStartDollyPan( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchStartDolly( event );\n\n\t\tif ( this.enablePan ) this._handleTouchStartPan( event );\n\n\t}\n\n\t_handleTouchStartDollyRotate( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchStartDolly( event );\n\n\t\tif ( this.enableRotate ) this._handleTouchStartRotate( event );\n\n\t}\n\n\t_handleTouchMoveRotate( event ) {\n\n\t\tif ( this._pointers.length == 1 ) {\n\n\t\t\tthis._rotateEnd.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._rotateEnd.set( x, y );\n\n\t\t}\n\n\t\tthis._rotateDelta.subVectors( this._rotateEnd, this._rotateStart ).multiplyScalar( this.rotateSpeed );\n\n\t\tconst element = this.domElement;\n\n\t\tthis._rotateLeft( _twoPI * this._rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\tthis._rotateUp( _twoPI * this._rotateDelta.y / element.clientHeight );\n\n\t\tthis._rotateStart.copy( this._rotateEnd );\n\n\t}\n\n\t_handleTouchMovePan( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._panEnd.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._panEnd.set( x, y );\n\n\t\t}\n\n\t\tthis._panDelta.subVectors( this._panEnd, this._panStart ).multiplyScalar( this.panSpeed );\n\n\t\tthis._pan( this._panDelta.x, this._panDelta.y );\n\n\t\tthis._panStart.copy( this._panEnd );\n\n\t}\n\n\t_handleTouchMoveDolly( event ) {\n\n\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\tconst dx = event.pageX - position.x;\n\t\tconst dy = event.pageY - position.y;\n\n\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tthis._dollyEnd.set( 0, distance );\n\n\t\tthis._dollyDelta.set( 0, Math.pow( this._dollyEnd.y / this._dollyStart.y, this.zoomSpeed ) );\n\n\t\tthis._dollyOut( this._dollyDelta.y );\n\n\t\tthis._dollyStart.copy( this._dollyEnd );\n\n\t\tconst centerX = ( event.pageX + position.x ) * 0.5;\n\t\tconst centerY = ( event.pageY + position.y ) * 0.5;\n\n\t\tthis._updateZoomParameters( centerX, centerY );\n\n\t}\n\n\t_handleTouchMoveDollyPan( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchMoveDolly( event );\n\n\t\tif ( this.enablePan ) this._handleTouchMovePan( event );\n\n\t}\n\n\t_handleTouchMoveDollyRotate( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchMoveDolly( event );\n\n\t\tif ( this.enableRotate ) this._handleTouchMoveRotate( event );\n\n\t}\n\n\t// pointers\n\n\t_addPointer( event ) {\n\n\t\tthis._pointers.push( event.pointerId );\n\n\t}\n\n\t_removePointer( event ) {\n\n\t\tdelete this._pointerPositions[ event.pointerId ];\n\n\t\tfor ( let i = 0; i < this._pointers.length; i ++ ) {\n\n\t\t\tif ( this._pointers[ i ] == event.pointerId ) {\n\n\t\t\t\tthis._pointers.splice( i, 1 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_isTrackingPointer( event ) {\n\n\t\tfor ( let i = 0; i < this._pointers.length; i ++ ) {\n\n\t\t\tif ( this._pointers[ i ] == event.pointerId ) return true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t_trackPointer( event ) {\n\n\t\tlet position = this._pointerPositions[ event.pointerId ];\n\n\t\tif ( position === undefined ) {\n\n\t\t\tposition = new Vector2();\n\t\t\tthis._pointerPositions[ event.pointerId ] = position;\n\n\t\t}\n\n\t\tposition.set( event.pageX, event.pageY );\n\n\t}\n\n\t_getSecondPointerPosition( event ) {\n\n\t\tconst pointerId = ( event.pointerId === this._pointers[ 0 ] ) ? this._pointers[ 1 ] : this._pointers[ 0 ];\n\n\t\treturn this._pointerPositions[ pointerId ];\n\n\t}\n\n\t//\n\n\t_customWheelEvent( event ) {\n\n\t\tconst mode = event.deltaMode;\n\n\t\t// minimal wheel event altered to meet delta-zoom demand\n\t\tconst newEvent = {\n\t\t\tclientX: event.clientX,\n\t\t\tclientY: event.clientY,\n\t\t\tdeltaY: event.deltaY,\n\t\t};\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 1: // LINE_MODE\n\t\t\t\tnewEvent.deltaY *= 16;\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // PAGE_MODE\n\t\t\t\tnewEvent.deltaY *= 100;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t// detect if event was triggered by pinching\n\t\tif ( event.ctrlKey && ! this._controlActive ) {\n\n\t\t\tnewEvent.deltaY *= 10;\n\n\t\t}\n\n\t\treturn newEvent;\n\n\t}\n\n}\n\nfunction onPointerDown( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tif ( this._pointers.length === 0 ) {\n\n\t\tthis.domElement.setPointerCapture( event.pointerId );\n\n\t\tthis.domElement.addEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.addEventListener( 'pointerup', this._onPointerUp );\n\n\t}\n\n\t//\n\n\tif ( this._isTrackingPointer( event ) ) return;\n\n\t//\n\n\tthis._addPointer( event );\n\n\tif ( event.pointerType === 'touch' ) {\n\n\t\tthis._onTouchStart( event );\n\n\t} else {\n\n\t\tthis._onMouseDown( event );\n\n\t}\n\n}\n\nfunction onPointerMove( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tif ( event.pointerType === 'touch' ) {\n\n\t\tthis._onTouchMove( event );\n\n\t} else {\n\n\t\tthis._onMouseMove( event );\n\n\t}\n\n}\n\nfunction onPointerUp( event ) {\n\n\tthis._removePointer( event );\n\n\tswitch ( this._pointers.length ) {\n\n\t\tcase 0:\n\n\t\t\tthis.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\n\t\t\tthis.dispatchEvent( _endEvent );\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t\t\tbreak;\n\n\t\tcase 1:\n\n\t\t\tconst pointerId = this._pointers[ 0 ];\n\t\t\tconst position = this._pointerPositions[ pointerId ];\n\n\t\t\t// minimal placeholder event - allows state correction on pointer-up\n\t\t\tthis._onTouchStart( { pointerId: pointerId, pageX: position.x, pageY: position.y } );\n\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onMouseDown( event ) {\n\n\tlet mouseAction;\n\n\tswitch ( event.button ) {\n\n\t\tcase 0:\n\n\t\t\tmouseAction = this.mouseButtons.LEFT;\n\t\t\tbreak;\n\n\t\tcase 1:\n\n\t\t\tmouseAction = this.mouseButtons.MIDDLE;\n\t\t\tbreak;\n\n\t\tcase 2:\n\n\t\t\tmouseAction = this.mouseButtons.RIGHT;\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tmouseAction = - 1;\n\n\t}\n\n\tswitch ( mouseAction ) {\n\n\t\tcase MOUSE.DOLLY:\n\n\t\t\tif ( this.enableZoom === false ) return;\n\n\t\t\tthis._handleMouseDownDolly( event );\n\n\t\t\tthis.state = _STATE.DOLLY;\n\n\t\t\tbreak;\n\n\t\tcase MOUSE.ROTATE:\n\n\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\tthis._handleMouseDownPan( event );\n\n\t\t\t\tthis.state = _STATE.PAN;\n\n\t\t\t} else {\n\n\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\tthis._handleMouseDownRotate( event );\n\n\t\t\t\tthis.state = _STATE.ROTATE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase MOUSE.PAN:\n\n\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\tthis._handleMouseDownRotate( event );\n\n\t\t\t\tthis.state = _STATE.ROTATE;\n\n\t\t\t} else {\n\n\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\tthis._handleMouseDownPan( event );\n\n\t\t\t\tthis.state = _STATE.PAN;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tif ( this.state !== _STATE.NONE ) {\n\n\t\tthis.dispatchEvent( _startEvent );\n\n\t}\n\n}\n\nfunction onMouseMove( event ) {\n\n\tswitch ( this.state ) {\n\n\t\tcase _STATE.ROTATE:\n\n\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\tthis._handleMouseMoveRotate( event );\n\n\t\t\tbreak;\n\n\t\tcase _STATE.DOLLY:\n\n\t\t\tif ( this.enableZoom === false ) return;\n\n\t\t\tthis._handleMouseMoveDolly( event );\n\n\t\t\tbreak;\n\n\t\tcase _STATE.PAN:\n\n\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\tthis._handleMouseMovePan( event );\n\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onMouseWheel( event ) {\n\n\tif ( this.enabled === false || this.enableZoom === false || this.state !== _STATE.NONE ) return;\n\n\tevent.preventDefault();\n\n\tthis.dispatchEvent( _startEvent );\n\n\tthis._handleMouseWheel( this._customWheelEvent( event ) );\n\n\tthis.dispatchEvent( _endEvent );\n\n}\n\nfunction onKeyDown( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tthis._handleKeyDown( event );\n\n}\n\nfunction onTouchStart( event ) {\n\n\tthis._trackPointer( event );\n\n\tswitch ( this._pointers.length ) {\n\n\t\tcase 1:\n\n\t\t\tswitch ( this.touches.ONE ) {\n\n\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartRotate( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_ROTATE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartPan( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_PAN;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tthis.state = _STATE.NONE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase 2:\n\n\t\t\tswitch ( this.touches.TWO ) {\n\n\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\tif ( this.enableZoom === false && this.enablePan === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartDollyPan( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\tif ( this.enableZoom === false && this.enableRotate === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartDollyRotate( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tthis.state = _STATE.NONE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tif ( this.state !== _STATE.NONE ) {\n\n\t\tthis.dispatchEvent( _startEvent );\n\n\t}\n\n}\n\nfunction onTouchMove( event ) {\n\n\tthis._trackPointer( event );\n\n\tswitch ( this.state ) {\n\n\t\tcase _STATE.TOUCH_ROTATE:\n\n\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\tthis._handleTouchMoveRotate( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_PAN:\n\n\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\tthis._handleTouchMovePan( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_DOLLY_PAN:\n\n\t\t\tif ( this.enableZoom === false && this.enablePan === false ) return;\n\n\t\t\tthis._handleTouchMoveDollyPan( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\tif ( this.enableZoom === false && this.enableRotate === false ) return;\n\n\t\t\tthis._handleTouchMoveDollyRotate( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n}\n\nfunction onContextMenu( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tevent.preventDefault();\n\n}\n\nfunction interceptControlDown( event ) {\n\n\tif ( event.key === 'Control' ) {\n\n\t\tthis._controlActive = true;\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.addEventListener( 'keyup', this._interceptControlUp, { passive: true, capture: true } );\n\n\t}\n\n}\n\nfunction interceptControlUp( event ) {\n\n\tif ( event.key === 'Control' ) {\n\n\t\tthis._controlActive = false;\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.removeEventListener( 'keyup', this._interceptControlUp, { passive: true, capture: true } );\n\n\t}\n\n}\n\nexport { OrbitControls };\n"],"names":["_changeEvent","type","_startEvent","_endEvent","_ray","Ray","_plane","Plane","_TILT_LIMIT","Math","cos","MathUtils","DEG2RAD","_v","Vector3","_twoPI","PI","_STATE","NONE","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","_EPS","OrbitControls","Controls","constructor","object","domElement","super","this","state","target","cursor","minDistance","maxDistance","Infinity","minZoom","maxZoom","minTargetRadius","maxTargetRadius","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","keyRotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","zoomToCursor","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","MIDDLE","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","_lastPosition","_lastQuaternion","Quaternion","_lastTargetPosition","_quat","setFromUnitVectors","up","_quatInverse","invert","_spherical","Spherical","_sphericalDelta","_scale","_panOffset","_rotateStart","Vector2","_rotateEnd","_rotateDelta","_panStart","_panEnd","_panDelta","_dollyStart","_dollyEnd","_dollyDelta","_dollyDirection","_mouse","_performCursorZoom","_pointers","_pointerPositions","_controlActive","_onPointerMove","onPointerMove","bind","_onPointerDown","onPointerDown","_onPointerUp","onPointerUp","_onContextMenu","onContextMenu","_onMouseWheel","onMouseWheel","_onKeyDown","onKeyDown","_onTouchStart","onTouchStart","_onTouchMove","onTouchMove","_onMouseDown","onMouseDown","_onMouseMove","onMouseMove","_interceptControlDown","interceptControlDown","_interceptControlUp","interceptControlUp","connect","update","element","addEventListener","passive","document","getRootNode","capture","style","touchAction","disconnect","removeEventListener","stopListenToKeyEvents","dispose","getPolarAngle","phi","getAzimuthalAngle","theta","getDistance","distanceTo","listenToKeyEvents","saveState","copy","reset","updateProjectionMatrix","dispatchEvent","deltaTime","sub","applyQuaternion","setFromVector3","_rotateLeft","_getAutoRotationAngle","min","max","isFinite","makeSafe","addScaledVector","add","clampLength","zoomChanged","isOrthographicCamera","radius","_clampDistance","prevRadius","setFromSpherical","lookAt","multiplyScalar","set","newRadius","isPerspectiveCamera","length","radiusDelta","updateMatrixWorld","mouseBefore","x","y","unproject","prevZoom","mouseAfter","console","warn","transformDirection","matrix","origin","direction","abs","dot","setFromNormalAndCoplanarPoint","intersectPlane","distanceToSquared","quaternion","_getZoomScale","delta","normalizedDelta","pow","angle","_rotateUp","_panLeft","distance","objectMatrix","setFromMatrixColumn","_panUp","crossVectors","_pan","deltaX","deltaY","targetDistance","tan","fov","clientHeight","right","left","clientWidth","top","bottom","_dollyOut","dollyScale","_dollyIn","_updateZoomParameters","rect","getBoundingClientRect","dx","dy","w","width","h","height","normalize","dist","_handleMouseDownRotate","event","clientX","clientY","_handleMouseDownDolly","_handleMouseDownPan","_handleMouseMoveRotate","subVectors","_handleMouseMoveDolly","_handleMouseMovePan","_handleMouseWheel","_handleKeyDown","needsUpdate","code","ctrlKey","metaKey","shiftKey","preventDefault","_handleTouchStartRotate","pageX","pageY","_getSecondPointerPosition","_handleTouchStartPan","_handleTouchStartDolly","sqrt","_handleTouchStartDollyPan","_handleTouchStartDollyRotate","_handleTouchMoveRotate","_handleTouchMovePan","_handleTouchMoveDolly","centerX","centerY","_handleTouchMoveDollyPan","_handleTouchMoveDollyRotate","_addPointer","push","pointerId","_removePointer","i","splice","_isTrackingPointer","_trackPointer","undefined","_customWheelEvent","mode","deltaMode","newEvent","enabled","setPointerCapture","pointerType","releasePointerCapture","mouseAction","button","DOLLY_ROTATE","key"],"sourceRoot":""}